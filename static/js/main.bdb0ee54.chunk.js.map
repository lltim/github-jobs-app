{"version":3,"sources":["useFetchJobs.js","Job.js","JobsPagination.js","SearchForm.js","App.js","index.js"],"names":["ACTIONS","reducer","state","action","type","loading","jobs","payload","error","hasNextPage","Job","job","useState","open","setOpen","Card","className","Body","Title","title","company","Subtitle","Date","created_at","toLocaleDateString","Badge","variant","location","style","wordBreak","source","how_to_apply","height","alt","src","company_logo","Text","Button","onClick","prevOpen","Collapse","in","description","JobsPagination","page","setPage","adjustPage","amount","prevPage","Pagination","Prev","Item","Ellipsis","active","Next","SearchForm","params","onParamChange","Form","Row","Group","as","Col","Label","Control","onChange","value","name","xs","Check","full_time","id","label","App","setParams","useReducer","dispatch","useEffect","cancelToken1","axios","CancelToken","get","cancelToken","token","markdown","then","res","data","catch","e","isCancel","cancelToken2","length","cancel","useFetchJobs","Container","param","target","prevParams","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAGMA,EACY,eADZA,EAEQ,WAFRA,EAGK,QAHLA,EAIoB,uBAK1B,SAASC,EAAQC,EAAOC,GACpB,OAAOA,EAAOC,MACV,KAAKJ,EACD,MAAO,CAAEK,SAAS,EAAMC,KAAM,IAClC,KAAKN,EACD,OAAO,2BAAKE,GAAZ,IAAmBG,SAAS,EAAOC,KAAMH,EAAOI,QAAQD,OAC5D,KAAKN,EACD,OAAO,2BAAKE,GAAZ,IAAmBG,SAAS,EAAOG,MAAOL,EAAOI,QAAQC,MAAOF,KAAM,KAC1E,KAAKN,EACD,OAAO,2BAAKE,GAAZ,IAAmBO,YAAaN,EAAOI,QAAQE,cACnD,QACI,OAAOP,G,kECnBJ,SAASQ,EAAT,GAAuB,IAARC,EAAO,EAAPA,IAAO,EACTC,oBAAS,GADA,mBAC1BC,EAD0B,KACpBC,EADoB,KAEjC,OACI,kBAACC,EAAA,EAAD,CAAMC,UAAU,QACZ,kBAACD,EAAA,EAAKE,KAAN,KACI,yBAAKD,UAAU,kCACX,6BACI,kBAACD,EAAA,EAAKG,MAAN,KACKP,EAAIQ,MADT,MACkB,0BAAMH,UAAU,gCAAgCL,EAAIS,UAEtE,kBAACL,EAAA,EAAKM,SAAN,CAAeL,UAAU,mBACpB,IAAIM,KAAKX,EAAIY,YAAYC,sBAE9B,kBAACC,EAAA,EAAD,CAAOC,QAAQ,YAAYV,UAAU,QAAQL,EAAIP,MACjD,kBAACqB,EAAA,EAAD,CAAOC,QAAQ,aAAaf,EAAIgB,UAChC,yBAAKC,MAAO,CAAEC,UAAW,cACrB,kBAAC,IAAD,CAAeC,OAAQnB,EAAIoB,iBAGnC,yBAAKf,UAAU,oBAAoBgB,OAAO,KAAKC,IAAKtB,EAAIS,QAASc,IAAKvB,EAAIwB,gBAE9E,kBAACpB,EAAA,EAAKqB,KAAN,KACI,kBAACC,EAAA,EAAD,CACAC,QAAS,kBAAMxB,GAAQ,SAAAyB,GAAQ,OAAKA,MACpCb,QAAQ,WAEHb,EAAO,eAAiB,iBAGjC,kBAAC2B,EAAA,EAAD,CAAUC,GAAI5B,GACV,yBAAKG,UAAU,QACX,kBAAC,IAAD,CAAec,OAAQnB,EAAI+B,kB,aChCpC,SAASC,EAAT,GAAyD,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,QAASpC,EAAe,EAAfA,YACpD,SAASqC,EAAWC,GAChBF,GAAQ,SAAAG,GAAQ,OAAIA,EAAWD,KAGnC,OACI,kBAACE,EAAA,EAAD,KACc,IAATL,GAAc,kBAACK,EAAA,EAAWC,KAAZ,CAAiBZ,QAAS,kBAAMQ,GAAY,MACjD,IAATF,GAAc,kBAACK,EAAA,EAAWE,KAAZ,CAAiBb,QAAS,kBAAMO,EAAQ,KAAxC,KACdD,EAAO,GAAK,kBAACK,EAAA,EAAWG,SAAZ,MACZR,EAAO,GAAK,kBAACK,EAAA,EAAWE,KAAZ,CAAiBb,QAAS,kBAAMQ,GAAY,KAAKF,EAAO,GACrE,kBAACK,EAAA,EAAWE,KAAZ,CAAiBE,QAAM,GAAET,GACxBnC,GAAe,kBAACwC,EAAA,EAAWE,KAAZ,CAAiBb,QAAS,kBAAMQ,EAAW,KAAKF,EAAO,GACtEnC,GAAe,kBAACwC,EAAA,EAAWK,KAAZ,CAAiBhB,QAAS,kBAAMQ,EAAW,O,qBCbxD,SAASS,EAAT,GAAgD,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,cACzC,OACI,kBAACC,EAAA,EAAD,CAAM1C,UAAU,QACZ,kBAAC0C,EAAA,EAAKC,IAAN,CAAU3C,UAAU,mBAChB,kBAAC0C,EAAA,EAAKE,MAAN,CAAYC,GAAIC,KACZ,kBAACJ,EAAA,EAAKK,MAAN,oBACA,kBAACL,EAAA,EAAKM,QAAN,CAAcC,SAAUR,EAAeS,MAAOV,EAAOd,YAAayB,KAAK,cAAc/D,KAAK,UAE9F,kBAACsD,EAAA,EAAKE,MAAN,CAAYC,GAAIC,KACZ,kBAACJ,EAAA,EAAKK,MAAN,iBACA,kBAACL,EAAA,EAAKM,QAAN,CAAcC,SAAUR,EAAeS,MAAOV,EAAOd,YAAayB,KAAK,WAAW/D,KAAK,UAE3F,kBAACsD,EAAA,EAAKE,MAAN,CAAYC,GAAIC,IAAKM,GAAG,OAAOpD,UAAU,QACrC,kBAAC0C,EAAA,EAAKW,MAAN,CAAYJ,SAAUR,EAAeS,MAAOV,EAAOc,UAAWH,KAAK,YAAYI,GAAG,YAAYC,MAAM,iBAAiBpE,KAAK,WAAWY,UAAU,YCmBpJyD,MA5Bf,WAAgB,IAAD,EACe7D,mBAAS,IADxB,mBACN4C,EADM,KACEkB,EADF,OAEW9D,mBAAS,GAFpB,mBAENgC,EAFM,KAEAC,EAFA,OJoBA,SAAsBW,EAAQZ,GAAO,IAAD,EACrB+B,qBAAW1E,EAAS,CAAEK,KAAM,GAAID,SAAS,IADpB,mBACxCH,EADwC,KACjC0E,EADiC,KAiC/C,OA9BAC,qBAAU,WACN,IAAMC,EAAeC,IAAMC,YAAYlD,SACvC8C,EAAS,CAAExE,KAAMJ,IACjB+E,IAAME,IAvBG,kBAuBW,CAChBC,YAAaJ,EAAaK,MAC1B3B,OAAO,aAAG4B,UAAU,EAAMxC,KAAMA,GAASY,KAC1C6B,MAAK,SAAAC,GACJV,EAAS,CAAExE,KAAMJ,EAAkBO,QAAS,CAAED,KAAMgF,EAAIC,WACzDC,OAAM,SAAAC,GACDV,IAAMW,SAASD,IACnBb,EAAS,CAAExE,KAAMJ,EAAeO,QAAS,CAAEC,MAAOiF,QAGtD,IAAME,EAAeZ,IAAMC,YAAYlD,SAWvC,OAVAiD,IAAME,IAlCG,kBAkCW,CAChBU,aAAcA,EAAaR,MAC3B3B,OAAO,aAAG4B,UAAU,EAAMxC,KAAMA,EAAO,GAAMY,KAC9C6B,MAAK,SAAAC,GACJV,EAAS,CAAExE,KAAMJ,EAA8BO,QAAS,CAAEE,YAAiC,IAApB6E,EAAIC,KAAKK,aACjFJ,OAAM,SAAAC,GACDV,IAAMW,SAASD,IACnBb,EAAS,CAAExE,KAAMJ,EAAeO,QAAS,CAAEC,MAAOiF,QAG/C,WACHX,EAAae,SACbF,EAAaE,YAElB,CAACrC,EAAQZ,IAEL1C,EIlDqC4F,CAAatC,EAAQZ,GAA3DtC,EAHK,EAGLA,KAAMD,EAHD,EAGCA,QAASG,EAHV,EAGUA,MAAOC,EAHjB,EAGiBA,YAU9B,OACE,kBAACsF,EAAA,EAAD,CAAW/E,UAAU,QACnB,wBAAIA,UAAU,QAAd,eACA,kBAACuC,EAAD,CAAYC,OAAQA,EAAQC,cAXhC,SAA2BgC,GACzB,IAAMO,EAAQP,EAAEQ,OAAO9B,KACjBD,EAAQuB,EAAEQ,OAAO/B,MACvBrB,EAAQ,GACR6B,GAAU,SAAAwB,GACR,OAAO,2BAAKA,GAAZ,kBAAyBF,EAAQ9B,UAOjC,kBAACvB,EAAD,CAAgBC,KAAMA,EAAMC,QAASA,EAASpC,YAAaA,IAC1DJ,GAAW,0CACXG,GAAS,sDACTF,EAAK6F,KAAI,SAAAxF,GACR,OAAO,kBAACD,EAAD,CAAK0F,IAAKzF,EAAI4D,GAAI5D,IAAKA,OAEhC,kBAACgC,EAAD,CAAgBC,KAAMA,EAAMC,QAASA,EAASpC,YAAaA,MC1BjE4F,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.bdb0ee54.chunk.js","sourcesContent":["import { useReducer, useEffect } from 'react'\nimport axios from 'axios'\n\nconst ACTIONS = {\n    MAKE_REQUEST: 'make-request',\n    GET_DATA: 'get-data',\n    ERROR: 'error',\n    UPDATE_HAS_NEXT_PAGE: 'update-has-next-page'\n}\n\nconst BASE_URL = '/positions.json'\n\nfunction reducer(state, action) {\n    switch(action.type) {\n        case ACTIONS.MAKE_REQUEST:\n            return { loading: true, jobs: []}\n        case ACTIONS.GET_DATA:\n            return { ...state, loading: false, jobs: action.payload.jobs }\n        case ACTIONS.ERROR:\n            return { ...state, loading: false, error: action.payload.error, jobs: [] }\n        case ACTIONS.UPDATE_HAS_NEXT_PAGE: \n            return { ...state, hasNextPage: action.payload.hasNextPage }\n        default:\n            return state\n    }\n}\n\nexport default function useFetchJobs(params, page) {\n    const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true })\n\n    useEffect(() => {\n        const cancelToken1 = axios.CancelToken.source()\n        dispatch({ type: ACTIONS.MAKE_REQUEST })\n        axios.get(BASE_URL, {\n            cancelToken: cancelToken1.token,\n            params: { markdown: true, page: page, ...params }\n        }).then(res => {\n            dispatch({ type: ACTIONS.GET_DATA, payload: { jobs: res.data } })\n        }).catch(e => {\n            if (axios.isCancel(e)) return\n            dispatch({ type: ACTIONS.ERROR, payload: { error: e } })\n        })\n\n        const cancelToken2 = axios.CancelToken.source()\n        axios.get(BASE_URL, {\n            cancelToken2: cancelToken2.token,\n            params: { markdown: true, page: page + 1, ...params }\n        }).then(res => {\n            dispatch({ type: ACTIONS.UPDATE_HAS_NEXT_PAGE, payload: { hasNextPage: res.data.length !== 0 } })\n        }).catch(e => {\n            if (axios.isCancel(e)) return\n            dispatch({ type: ACTIONS.ERROR, payload: { error: e } })\n        })\n\n        return () => {\n            cancelToken1.cancel()\n            cancelToken2.cancel()\n        }\n    }, [params, page])\n\n    return state\n}","import React, { useState } from 'react'\nimport { Card, Badge, Button, Collapse } from 'react-bootstrap'\nimport ReactMarkdown from 'react-markdown'\n\nexport default function Job({ job }) {\n    const [open, setOpen] = useState(false)\n    return (\n        <Card className=\"mb-3\">\n            <Card.Body>\n                <div className=\"d-flex justify-content-between\">\n                    <div>\n                        <Card.Title>\n                            {job.title} - <span className=\"text-muted font-weight-light\">{job.company}</span>\n                        </Card.Title>\n                        <Card.Subtitle className=\"text-muted mb-2\">\n                            {new Date(job.created_at).toLocaleDateString()}\n                        </Card.Subtitle>\n                        <Badge variant=\"secondary\" className=\"mr-2\">{job.type}</Badge>\n                        <Badge variant=\"secondary\">{job.location}</Badge>\n                        <div style={{ wordBreak: 'break-all' }}>\n                            <ReactMarkdown source={job.how_to_apply} />\n                        </div>\n                    </div>\n                    <img className=\"d-none d-md-block\" height=\"50\" alt={job.company} src={job.company_logo} />\n                </div>\n                <Card.Text>\n                    <Button \n                    onClick={() => setOpen(prevOpen => !prevOpen)}\n                    variant=\"primary\"\n                    >\n                        {open ? 'Hide Details' : 'View Details'}\n                    </Button>\n                </Card.Text>\n                <Collapse in={open}>\n                    <div className=\"mt-4\">\n                        <ReactMarkdown source={job.description} />\n                    </div>\n                </Collapse>\n                \n            </Card.Body>\n        </Card>\n    )\n}\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\n\nexport default function JobsPagination({ page, setPage, hasNextPage }) {\n    function adjustPage(amount) {\n        setPage(prevPage => prevPage + amount)\n    }\n\n    return (\n        <Pagination>\n            {page !== 1 && <Pagination.Prev onClick={() => adjustPage(-1)}/>}\n            {page !== 1 && <Pagination.Item onClick={() => setPage(2)}>1</Pagination.Item>}\n            {page > 2 && <Pagination.Ellipsis />}\n            {page > 2 && <Pagination.Item onClick={() => adjustPage(-1)}>{page - 1}</Pagination.Item>}\n            <Pagination.Item active>{page}</Pagination.Item>\n            {hasNextPage && <Pagination.Item onClick={() => adjustPage(1)}>{page + 1}</Pagination.Item>}\n            {hasNextPage && <Pagination.Next onClick={() => adjustPage(1)} />}\n        </Pagination>\n    )\n}\n","import React from 'react'\nimport { Form, Col } from 'react-bootstrap'\n\nexport default function SearchForm({ params, onParamChange }) {\n    return (\n        <Form className='mb-4'>\n            <Form.Row className=\"align-items-end\">\n                <Form.Group as={Col}>\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control onChange={onParamChange} value={params.description} name=\"description\" type=\"text\" />\n                </Form.Group>\n                <Form.Group as={Col}>\n                    <Form.Label>Location</Form.Label>\n                    <Form.Control onChange={onParamChange} value={params.description} name=\"location\" type=\"text\" />\n                </Form.Group>\n                <Form.Group as={Col} xs=\"auto\" className=\"ml-2\">\n                    <Form.Check onChange={onParamChange} value={params.full_time} name=\"full-time\" id=\"full-time\" label=\"Only Full Time\" type=\"checkbox\" className=\"mb-2\" />\n                </Form.Group>\n            </Form.Row>\n        </Form>\n    )\n}\n","import React, { useState } from 'react';\nimport useFetchJobs from './useFetchJobs';\nimport { Container } from 'react-bootstrap';\nimport Job from './Job'\nimport JobsPagination from './JobsPagination';\nimport SearchForm from './SearchForm';\n\nfunction App() {\n  const [params, setParams] = useState({})\n  const [page, setPage] = useState(1)\n  const { jobs, loading, error, hasNextPage } = useFetchJobs(params, page)\n\n  function handleParamChange(e) {\n    const param = e.target.name\n    const value = e.target.value\n    setPage(1)\n    setParams(prevParams => {\n      return { ...prevParams, [param]: value}\n    })\n  }\n  return (\n    <Container className=\"my-4\">\n      <h1 className=\"mb-4\">GitHub Jobs</h1>\n      <SearchForm params={params} onParamChange={handleParamChange} />\n      <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n      {loading && <h1>Loading...</h1>}\n      {error && <h1>Error. Try Refreshing.</h1>}\n      {jobs.map(job => {\n        return <Job key={job.id} job={job} />\n      })}\n      <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n    </Container>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}